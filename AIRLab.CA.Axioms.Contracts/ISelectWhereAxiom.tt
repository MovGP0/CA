<#@ template language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
using System;
using AIRLab.CA.Nodes;

namespace AIRLab.CA.Axioms
{
    public interface ISelectWhereAxiom
    {
        ISelectAxiom SelectAxiom { get; }
    }
<# for(int i = 0; i <= 12; i++) 
{
	var builder = new StringBuilder();

	for(int j = 0; j <= i; j++) 
	{
		builder.Append("T");
		builder.Append(j);
		if(j != i) 
		{
			builder.Append(", ");
		}
	}

	var T = builder.ToString();
#>
    public interface ISelectWhereAxiom<<#= T #>> : ISelectWhereAxiom
<#     for(int j = 0; j <= i; j++) { #>
        where T<#= j #> : INode 
<#     } #>
    {
        Func<ISelectOutput, ITypizedNodeArray<<#= T #>>> Invoke { get; }
    }
<# } #>
}