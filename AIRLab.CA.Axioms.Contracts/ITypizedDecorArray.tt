<#@ template language="C#" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<# var letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"; #>
using AIRLab.CA.Nodes;

namespace AIRLab.CA.Axioms
{
<# for(int i = 0; i <= 12; i++) 
{
	var builder = new StringBuilder();

	for(int j = 0; j <= i; j++) 
	{
		builder.Append("out T");
		builder.Append(j);
		if(j != i) 
		{
			builder.Append(", ");
		}
	}

	var outT = builder.ToString();
#>
    public interface ITypizedDecorArray<<#= outT #>> : IModInput
<#     for(int j = 0; j <= i; j++) { #>
        where T<#= j #> : INode 
<#     } #>
    {
<#     for(int j = 0; j <= i; j++) { #>
        INodeDecorator<T<#= j #>> <#= letters[j] #> { get; }
<#     } #>
    }
<# } #>
}